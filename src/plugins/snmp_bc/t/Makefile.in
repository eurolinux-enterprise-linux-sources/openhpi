# Makefile.in generated by automake 1.13.4 from Makefile.am.
# @configure_input@

# Copyright (C) 1994-2013 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

# (C) Copyright IBM Corp 2003, 2006
# All rights reserved.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. This
# file and program are licensed under a BSD style license. See
# the Copying file included with the OpenHPI distribution for
# full licensing terms.

VPATH = @srcdir@
am__is_gnu_make = test -n '$(MAKEFILE_LIST)' && test -n '$(MAKELEVEL)'
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkglibexecdir = $(libexecdir)/@PACKAGE@
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = @build@
host_triplet = @host@
TESTS = setup_conf$(EXEEXT) tsim_file$(EXEEXT) tevent$(EXEEXT) \
	tcontrol_parms$(EXEEXT) tset_resource_tag$(EXEEXT) \
	tset_resource_sev$(EXEEXT) tsnmp_bc_getset$(EXEEXT) \
	tsensorget001$(EXEEXT) tsensorget002$(EXEEXT) \
	tsensorget003$(EXEEXT) tsensorget004$(EXEEXT) \
	tsensorget005$(EXEEXT) tsensorget010$(EXEEXT) \
	tsensorget013$(EXEEXT) tsensorget016$(EXEEXT) \
	tsensorget031$(EXEEXT) tsensorget033$(EXEEXT) \
	tsensorget034$(EXEEXT) tsensorget035$(EXEEXT) \
	tsensorget036$(EXEEXT) tsensorget040$(EXEEXT) \
	tsensorget041$(EXEEXT) tcontrol001$(EXEEXT) \
	tcontrol002$(EXEEXT) tcontrol003$(EXEEXT) \
	tcontrolfailover$(EXEEXT) tdiscover001$(EXEEXT) \
	tel001$(EXEEXT) tel002$(EXEEXT) tel003$(EXEEXT) \
	tel004$(EXEEXT) tel005$(EXEEXT) tel006$(EXEEXT) \
	tel007$(EXEEXT) thotswap001$(EXEEXT) thotswap-mhs001$(EXEEXT) \
	thotswap-simple001$(EXEEXT) tinv001$(EXEEXT) tinv002$(EXEEXT) \
	tinv003$(EXEEXT) tinv004$(EXEEXT) tinv005$(EXEEXT) \
	tinv006$(EXEEXT) tinv007$(EXEEXT) tpower001$(EXEEXT) \
	treset001$(EXEEXT) tsptime001$(EXEEXT) tsptime002$(EXEEXT) \
	tsensorset001$(EXEEXT) tsensorset002$(EXEEXT) \
	tsensorset003$(EXEEXT) tsensorset004$(EXEEXT) \
	tsensorset005$(EXEEXT) tsensorset006$(EXEEXT) \
	tsensorset007$(EXEEXT) tsensorset008$(EXEEXT) \
	tsensorset009$(EXEEXT) tsensorset010$(EXEEXT) \
	tsensorset011$(EXEEXT) tsensorset012$(EXEEXT) \
	tsensorset013$(EXEEXT) tsensorset015$(EXEEXT) \
	tsensorset017$(EXEEXT) tsensorset018$(EXEEXT) \
	tsensorset019$(EXEEXT) tsensorset020$(EXEEXT) \
	tsensorset021$(EXEEXT) tsensorset022$(EXEEXT) \
	tsensorset023$(EXEEXT) tsensorset024$(EXEEXT)
check_PROGRAMS = $(am__EXEEXT_1)
subdir = plugins/snmp_bc/t
DIST_COMMON = $(srcdir)/Makefile.in $(srcdir)/Makefile.am \
	$(top_srcdir)/depcomp $(top_srcdir)/test-driver
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/acinclude.m4 \
	$(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
libsnmp_bc_la_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la
am_libsnmp_bc_la_OBJECTS = sim_init.lo sim_resources.lo sim_file.lo \
	snmp_utils.lo tsetup.lo
am__objects_1 = el2event.lo
am__objects_2 = snmp_bc.lo snmp_bc_annunciator.lo snmp_bc_control.lo \
	snmp_bc_discover.lo snmp_bc_discover_bc.lo \
	snmp_bc_discover_rsa.lo snmp_bc_event.lo snmp_bc_inventory.lo \
	snmp_bc_hotswap.lo snmp_bc_power.lo snmp_bc_reset.lo \
	snmp_bc_resources.lo snmp_bc_resources_rsa.lo snmp_bc_sel.lo \
	snmp_bc_sensor.lo snmp_bc_session.lo snmp_bc_time.lo \
	snmp_bc_utils.lo snmp_bc_watchdog.lo snmp_bc_xml2event.lo
nodist_libsnmp_bc_la_OBJECTS = $(am__objects_1) $(am__objects_2)
libsnmp_bc_la_OBJECTS = $(am_libsnmp_bc_la_OBJECTS) \
	$(nodist_libsnmp_bc_la_OBJECTS)
AM_V_lt = $(am__v_lt_@AM_V@)
am__v_lt_ = $(am__v_lt_@AM_DEFAULT_V@)
am__v_lt_0 = --silent
am__v_lt_1 = 
libsnmp_bc_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(libsnmp_bc_la_LDFLAGS) $(LDFLAGS) -o $@
am__EXEEXT_1 = setup_conf$(EXEEXT) tsim_file$(EXEEXT) tevent$(EXEEXT) \
	tcontrol_parms$(EXEEXT) tset_resource_tag$(EXEEXT) \
	tset_resource_sev$(EXEEXT) tsnmp_bc_getset$(EXEEXT) \
	tsensorget001$(EXEEXT) tsensorget002$(EXEEXT) \
	tsensorget003$(EXEEXT) tsensorget004$(EXEEXT) \
	tsensorget005$(EXEEXT) tsensorget010$(EXEEXT) \
	tsensorget013$(EXEEXT) tsensorget016$(EXEEXT) \
	tsensorget031$(EXEEXT) tsensorget033$(EXEEXT) \
	tsensorget034$(EXEEXT) tsensorget035$(EXEEXT) \
	tsensorget036$(EXEEXT) tsensorget040$(EXEEXT) \
	tsensorget041$(EXEEXT) tcontrol001$(EXEEXT) \
	tcontrol002$(EXEEXT) tcontrol003$(EXEEXT) \
	tcontrolfailover$(EXEEXT) tdiscover001$(EXEEXT) \
	tel001$(EXEEXT) tel002$(EXEEXT) tel003$(EXEEXT) \
	tel004$(EXEEXT) tel005$(EXEEXT) tel006$(EXEEXT) \
	tel007$(EXEEXT) thotswap001$(EXEEXT) thotswap-mhs001$(EXEEXT) \
	thotswap-simple001$(EXEEXT) tinv001$(EXEEXT) tinv002$(EXEEXT) \
	tinv003$(EXEEXT) tinv004$(EXEEXT) tinv005$(EXEEXT) \
	tinv006$(EXEEXT) tinv007$(EXEEXT) tpower001$(EXEEXT) \
	treset001$(EXEEXT) tsptime001$(EXEEXT) tsptime002$(EXEEXT) \
	tsensorset001$(EXEEXT) tsensorset002$(EXEEXT) \
	tsensorset003$(EXEEXT) tsensorset004$(EXEEXT) \
	tsensorset005$(EXEEXT) tsensorset006$(EXEEXT) \
	tsensorset007$(EXEEXT) tsensorset008$(EXEEXT) \
	tsensorset009$(EXEEXT) tsensorset010$(EXEEXT) \
	tsensorset011$(EXEEXT) tsensorset012$(EXEEXT) \
	tsensorset013$(EXEEXT) tsensorset015$(EXEEXT) \
	tsensorset017$(EXEEXT) tsensorset018$(EXEEXT) \
	tsensorset019$(EXEEXT) tsensorset020$(EXEEXT) \
	tsensorset021$(EXEEXT) tsensorset022$(EXEEXT) \
	tsensorset023$(EXEEXT) tsensorset024$(EXEEXT)
am_setup_conf_OBJECTS = setup_conf.$(OBJEXT)
setup_conf_OBJECTS = $(am_setup_conf_OBJECTS)
setup_conf_LDADD = $(LDADD)
am_tcontrol001_OBJECTS = tcontrol001.$(OBJEXT)
tcontrol001_OBJECTS = $(am_tcontrol001_OBJECTS)
tcontrol001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tcontrol002_OBJECTS = tcontrol002.$(OBJEXT)
tcontrol002_OBJECTS = $(am_tcontrol002_OBJECTS)
tcontrol002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tcontrol003_OBJECTS = tcontrol003.$(OBJEXT)
tcontrol003_OBJECTS = $(am_tcontrol003_OBJECTS)
tcontrol003_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tcontrol_parms_OBJECTS = tcontrol_parms.$(OBJEXT)
tcontrol_parms_OBJECTS = $(am_tcontrol_parms_OBJECTS)
tcontrol_parms_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tcontrolfailover_OBJECTS = tcontrolfailover.$(OBJEXT)
tcontrolfailover_OBJECTS = $(am_tcontrolfailover_OBJECTS)
tcontrolfailover_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tdiscover001_OBJECTS = tdiscover001.$(OBJEXT)
tdiscover001_OBJECTS = $(am_tdiscover001_OBJECTS)
tdiscover001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel001_OBJECTS = tel001.$(OBJEXT)
tel001_OBJECTS = $(am_tel001_OBJECTS)
tel001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel002_OBJECTS = tel002.$(OBJEXT)
tel002_OBJECTS = $(am_tel002_OBJECTS)
tel002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel003_OBJECTS = tel003.$(OBJEXT)
tel003_OBJECTS = $(am_tel003_OBJECTS)
tel003_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel004_OBJECTS = tel004.$(OBJEXT)
tel004_OBJECTS = $(am_tel004_OBJECTS)
tel004_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel005_OBJECTS = tel005.$(OBJEXT)
tel005_OBJECTS = $(am_tel005_OBJECTS)
tel005_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel006_OBJECTS = tel006.$(OBJEXT)
tel006_OBJECTS = $(am_tel006_OBJECTS)
tel006_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tel007_OBJECTS = tel007.$(OBJEXT)
tel007_OBJECTS = $(am_tel007_OBJECTS)
tel007_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tevent_OBJECTS = tevent.$(OBJEXT)
tevent_OBJECTS = $(am_tevent_OBJECTS)
tevent_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_thotswap_mhs001_OBJECTS = thotswap-mhs001.$(OBJEXT)
thotswap_mhs001_OBJECTS = $(am_thotswap_mhs001_OBJECTS)
thotswap_mhs001_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_thotswap_simple001_OBJECTS = thotswap-simple001.$(OBJEXT)
thotswap_simple001_OBJECTS = $(am_thotswap_simple001_OBJECTS)
thotswap_simple001_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_thotswap001_OBJECTS = thotswap001.$(OBJEXT)
thotswap001_OBJECTS = $(am_thotswap001_OBJECTS)
thotswap001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv001_OBJECTS = tinv001.$(OBJEXT)
tinv001_OBJECTS = $(am_tinv001_OBJECTS)
tinv001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv002_OBJECTS = tinv002.$(OBJEXT)
tinv002_OBJECTS = $(am_tinv002_OBJECTS)
tinv002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv003_OBJECTS = tinv003.$(OBJEXT)
tinv003_OBJECTS = $(am_tinv003_OBJECTS)
tinv003_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv004_OBJECTS = tinv004.$(OBJEXT)
tinv004_OBJECTS = $(am_tinv004_OBJECTS)
tinv004_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv005_OBJECTS = tinv005.$(OBJEXT)
tinv005_OBJECTS = $(am_tinv005_OBJECTS)
tinv005_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv006_OBJECTS = tinv006.$(OBJEXT)
tinv006_OBJECTS = $(am_tinv006_OBJECTS)
tinv006_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tinv007_OBJECTS = tinv007.$(OBJEXT)
tinv007_OBJECTS = $(am_tinv007_OBJECTS)
tinv007_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tpower001_OBJECTS = tpower001.$(OBJEXT)
tpower001_OBJECTS = $(am_tpower001_OBJECTS)
tpower001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_treset001_OBJECTS = treset001.$(OBJEXT)
treset001_OBJECTS = $(am_treset001_OBJECTS)
treset001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget001_OBJECTS = tsensorget001.$(OBJEXT)
tsensorget001_OBJECTS = $(am_tsensorget001_OBJECTS)
tsensorget001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget002_OBJECTS = tsensorget002.$(OBJEXT)
tsensorget002_OBJECTS = $(am_tsensorget002_OBJECTS)
tsensorget002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget003_OBJECTS = tsensorget003.$(OBJEXT)
tsensorget003_OBJECTS = $(am_tsensorget003_OBJECTS)
tsensorget003_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget004_OBJECTS = tsensorget004.$(OBJEXT)
tsensorget004_OBJECTS = $(am_tsensorget004_OBJECTS)
tsensorget004_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget005_OBJECTS = tsensorget005.$(OBJEXT)
tsensorget005_OBJECTS = $(am_tsensorget005_OBJECTS)
tsensorget005_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget010_OBJECTS = tsensorget010.$(OBJEXT)
tsensorget010_OBJECTS = $(am_tsensorget010_OBJECTS)
tsensorget010_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget013_OBJECTS = tsensorget013.$(OBJEXT)
tsensorget013_OBJECTS = $(am_tsensorget013_OBJECTS)
tsensorget013_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget016_OBJECTS = tsensorget016.$(OBJEXT)
tsensorget016_OBJECTS = $(am_tsensorget016_OBJECTS)
tsensorget016_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget031_OBJECTS = tsensorget031.$(OBJEXT)
tsensorget031_OBJECTS = $(am_tsensorget031_OBJECTS)
tsensorget031_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget033_OBJECTS = tsensorget033.$(OBJEXT)
tsensorget033_OBJECTS = $(am_tsensorget033_OBJECTS)
tsensorget033_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget034_OBJECTS = tsensorget034.$(OBJEXT)
tsensorget034_OBJECTS = $(am_tsensorget034_OBJECTS)
tsensorget034_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget035_OBJECTS = tsensorget035.$(OBJEXT)
tsensorget035_OBJECTS = $(am_tsensorget035_OBJECTS)
tsensorget035_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget036_OBJECTS = tsensorget036.$(OBJEXT)
tsensorget036_OBJECTS = $(am_tsensorget036_OBJECTS)
tsensorget036_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget040_OBJECTS = tsensorget040.$(OBJEXT)
tsensorget040_OBJECTS = $(am_tsensorget040_OBJECTS)
tsensorget040_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorget041_OBJECTS = tsensorget041.$(OBJEXT)
tsensorget041_OBJECTS = $(am_tsensorget041_OBJECTS)
tsensorget041_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset001_OBJECTS = tsensorset001.$(OBJEXT)
tsensorset001_OBJECTS = $(am_tsensorset001_OBJECTS)
tsensorset001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset002_OBJECTS = tsensorset002.$(OBJEXT)
tsensorset002_OBJECTS = $(am_tsensorset002_OBJECTS)
tsensorset002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset003_OBJECTS = tsensorset003.$(OBJEXT)
tsensorset003_OBJECTS = $(am_tsensorset003_OBJECTS)
tsensorset003_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset004_OBJECTS = tsensorset004.$(OBJEXT)
tsensorset004_OBJECTS = $(am_tsensorset004_OBJECTS)
tsensorset004_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset005_OBJECTS = tsensorset005.$(OBJEXT)
tsensorset005_OBJECTS = $(am_tsensorset005_OBJECTS)
tsensorset005_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset006_OBJECTS = tsensorset006.$(OBJEXT)
tsensorset006_OBJECTS = $(am_tsensorset006_OBJECTS)
tsensorset006_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset007_OBJECTS = tsensorset007.$(OBJEXT)
tsensorset007_OBJECTS = $(am_tsensorset007_OBJECTS)
tsensorset007_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset008_OBJECTS = tsensorset008.$(OBJEXT)
tsensorset008_OBJECTS = $(am_tsensorset008_OBJECTS)
tsensorset008_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset009_OBJECTS = tsensorset009.$(OBJEXT)
tsensorset009_OBJECTS = $(am_tsensorset009_OBJECTS)
tsensorset009_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset010_OBJECTS = tsensorset010.$(OBJEXT)
tsensorset010_OBJECTS = $(am_tsensorset010_OBJECTS)
tsensorset010_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset011_OBJECTS = tsensorset011.$(OBJEXT)
tsensorset011_OBJECTS = $(am_tsensorset011_OBJECTS)
tsensorset011_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset012_OBJECTS = tsensorset012.$(OBJEXT)
tsensorset012_OBJECTS = $(am_tsensorset012_OBJECTS)
tsensorset012_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset013_OBJECTS = tsensorset013.$(OBJEXT)
tsensorset013_OBJECTS = $(am_tsensorset013_OBJECTS)
tsensorset013_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset015_OBJECTS = tsensorset015.$(OBJEXT)
tsensorset015_OBJECTS = $(am_tsensorset015_OBJECTS)
tsensorset015_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset017_OBJECTS = tsensorset017.$(OBJEXT)
tsensorset017_OBJECTS = $(am_tsensorset017_OBJECTS)
tsensorset017_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset018_OBJECTS = tsensorset018.$(OBJEXT)
tsensorset018_OBJECTS = $(am_tsensorset018_OBJECTS)
tsensorset018_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset019_OBJECTS = tsensorset019.$(OBJEXT)
tsensorset019_OBJECTS = $(am_tsensorset019_OBJECTS)
tsensorset019_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset020_OBJECTS = tsensorset020.$(OBJEXT)
tsensorset020_OBJECTS = $(am_tsensorset020_OBJECTS)
tsensorset020_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset021_OBJECTS = tsensorset021.$(OBJEXT)
tsensorset021_OBJECTS = $(am_tsensorset021_OBJECTS)
tsensorset021_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset022_OBJECTS = tsensorset022.$(OBJEXT)
tsensorset022_OBJECTS = $(am_tsensorset022_OBJECTS)
tsensorset022_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset023_OBJECTS = tsensorset023.$(OBJEXT)
tsensorset023_OBJECTS = $(am_tsensorset023_OBJECTS)
tsensorset023_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsensorset024_OBJECTS = tsensorset024.$(OBJEXT)
tsensorset024_OBJECTS = $(am_tsensorset024_OBJECTS)
tsensorset024_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tset_resource_sev_OBJECTS = tset_resource_sev.$(OBJEXT)
tset_resource_sev_OBJECTS = $(am_tset_resource_sev_OBJECTS)
tset_resource_sev_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tset_resource_tag_OBJECTS = tset_resource_tag.$(OBJEXT)
tset_resource_tag_OBJECTS = $(am_tset_resource_tag_OBJECTS)
tset_resource_tag_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsim_file_OBJECTS = tsim_file.$(OBJEXT)
tsim_file_OBJECTS = $(am_tsim_file_OBJECTS)
tsim_file_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsnmp_bc_getset_OBJECTS = tsnmp_bc_getset.$(OBJEXT)
tsnmp_bc_getset_OBJECTS = $(am_tsnmp_bc_getset_OBJECTS)
tsnmp_bc_getset_DEPENDENCIES =  \
	$(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsptime001_OBJECTS = tsptime001.$(OBJEXT)
tsptime001_OBJECTS = $(am_tsptime001_OBJECTS)
tsptime001_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
am_tsptime002_OBJECTS = tsptime002.$(OBJEXT)
tsptime002_OBJECTS = $(am_tsptime002_OBJECTS)
tsptime002_DEPENDENCIES = $(top_builddir)/utils/libopenhpiutils.la \
	$(top_builddir)/openhpid/libopenhpidaemon.la \
	$(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la
AM_V_P = $(am__v_P_@AM_V@)
am__v_P_ = $(am__v_P_@AM_DEFAULT_V@)
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_@AM_V@)
am__v_GEN_ = $(am__v_GEN_@AM_DEFAULT_V@)
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_@AM_V@)
am__v_at_ = $(am__v_at_@AM_DEFAULT_V@)
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.@am__isrc@ -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_@AM_V@)
am__v_CC_ = $(am__v_CC_@AM_DEFAULT_V@)
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_@AM_V@)
am__v_CCLD_ = $(am__v_CCLD_@AM_DEFAULT_V@)
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
SOURCES = $(libsnmp_bc_la_SOURCES) $(nodist_libsnmp_bc_la_SOURCES) \
	$(setup_conf_SOURCES) $(tcontrol001_SOURCES) \
	$(tcontrol002_SOURCES) $(tcontrol003_SOURCES) \
	$(tcontrol_parms_SOURCES) $(tcontrolfailover_SOURCES) \
	$(tdiscover001_SOURCES) $(tel001_SOURCES) $(tel002_SOURCES) \
	$(tel003_SOURCES) $(tel004_SOURCES) $(tel005_SOURCES) \
	$(tel006_SOURCES) $(tel007_SOURCES) $(tevent_SOURCES) \
	$(thotswap_mhs001_SOURCES) $(thotswap_simple001_SOURCES) \
	$(thotswap001_SOURCES) $(tinv001_SOURCES) $(tinv002_SOURCES) \
	$(tinv003_SOURCES) $(tinv004_SOURCES) $(tinv005_SOURCES) \
	$(tinv006_SOURCES) $(tinv007_SOURCES) $(tpower001_SOURCES) \
	$(treset001_SOURCES) $(tsensorget001_SOURCES) \
	$(tsensorget002_SOURCES) $(tsensorget003_SOURCES) \
	$(tsensorget004_SOURCES) $(tsensorget005_SOURCES) \
	$(tsensorget010_SOURCES) $(tsensorget013_SOURCES) \
	$(tsensorget016_SOURCES) $(tsensorget031_SOURCES) \
	$(tsensorget033_SOURCES) $(tsensorget034_SOURCES) \
	$(tsensorget035_SOURCES) $(tsensorget036_SOURCES) \
	$(tsensorget040_SOURCES) $(tsensorget041_SOURCES) \
	$(tsensorset001_SOURCES) $(tsensorset002_SOURCES) \
	$(tsensorset003_SOURCES) $(tsensorset004_SOURCES) \
	$(tsensorset005_SOURCES) $(tsensorset006_SOURCES) \
	$(tsensorset007_SOURCES) $(tsensorset008_SOURCES) \
	$(tsensorset009_SOURCES) $(tsensorset010_SOURCES) \
	$(tsensorset011_SOURCES) $(tsensorset012_SOURCES) \
	$(tsensorset013_SOURCES) $(tsensorset015_SOURCES) \
	$(tsensorset017_SOURCES) $(tsensorset018_SOURCES) \
	$(tsensorset019_SOURCES) $(tsensorset020_SOURCES) \
	$(tsensorset021_SOURCES) $(tsensorset022_SOURCES) \
	$(tsensorset023_SOURCES) $(tsensorset024_SOURCES) \
	$(tset_resource_sev_SOURCES) $(tset_resource_tag_SOURCES) \
	$(tsim_file_SOURCES) $(tsnmp_bc_getset_SOURCES) \
	$(tsptime001_SOURCES) $(tsptime002_SOURCES)
DIST_SOURCES = $(libsnmp_bc_la_SOURCES) $(setup_conf_SOURCES) \
	$(tcontrol001_SOURCES) $(tcontrol002_SOURCES) \
	$(tcontrol003_SOURCES) $(tcontrol_parms_SOURCES) \
	$(tcontrolfailover_SOURCES) $(tdiscover001_SOURCES) \
	$(tel001_SOURCES) $(tel002_SOURCES) $(tel003_SOURCES) \
	$(tel004_SOURCES) $(tel005_SOURCES) $(tel006_SOURCES) \
	$(tel007_SOURCES) $(tevent_SOURCES) $(thotswap_mhs001_SOURCES) \
	$(thotswap_simple001_SOURCES) $(thotswap001_SOURCES) \
	$(tinv001_SOURCES) $(tinv002_SOURCES) $(tinv003_SOURCES) \
	$(tinv004_SOURCES) $(tinv005_SOURCES) $(tinv006_SOURCES) \
	$(tinv007_SOURCES) $(tpower001_SOURCES) $(treset001_SOURCES) \
	$(tsensorget001_SOURCES) $(tsensorget002_SOURCES) \
	$(tsensorget003_SOURCES) $(tsensorget004_SOURCES) \
	$(tsensorget005_SOURCES) $(tsensorget010_SOURCES) \
	$(tsensorget013_SOURCES) $(tsensorget016_SOURCES) \
	$(tsensorget031_SOURCES) $(tsensorget033_SOURCES) \
	$(tsensorget034_SOURCES) $(tsensorget035_SOURCES) \
	$(tsensorget036_SOURCES) $(tsensorget040_SOURCES) \
	$(tsensorget041_SOURCES) $(tsensorset001_SOURCES) \
	$(tsensorset002_SOURCES) $(tsensorset003_SOURCES) \
	$(tsensorset004_SOURCES) $(tsensorset005_SOURCES) \
	$(tsensorset006_SOURCES) $(tsensorset007_SOURCES) \
	$(tsensorset008_SOURCES) $(tsensorset009_SOURCES) \
	$(tsensorset010_SOURCES) $(tsensorset011_SOURCES) \
	$(tsensorset012_SOURCES) $(tsensorset013_SOURCES) \
	$(tsensorset015_SOURCES) $(tsensorset017_SOURCES) \
	$(tsensorset018_SOURCES) $(tsensorset019_SOURCES) \
	$(tsensorset020_SOURCES) $(tsensorset021_SOURCES) \
	$(tsensorset022_SOURCES) $(tsensorset023_SOURCES) \
	$(tsensorset024_SOURCES) $(tset_resource_sev_SOURCES) \
	$(tset_resource_tag_SOURCES) $(tsim_file_SOURCES) \
	$(tsnmp_bc_getset_SOURCES) $(tsptime001_SOURCES) \
	$(tsptime002_SOURCES)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__tty_colors_dummy = \
  mgn= red= grn= lgn= blu= brg= std=; \
  am__color_tests=no
am__tty_colors = { \
  $(am__tty_colors_dummy); \
  if test "X$(AM_COLOR_TESTS)" = Xno; then \
    am__color_tests=no; \
  elif test "X$(AM_COLOR_TESTS)" = Xalways; then \
    am__color_tests=yes; \
  elif test "X$$TERM" != Xdumb && { test -t 1; } 2>/dev/null; then \
    am__color_tests=yes; \
  fi; \
  if test $$am__color_tests = yes; then \
    red='[0;31m'; \
    grn='[0;32m'; \
    lgn='[1;32m'; \
    blu='[1;34m'; \
    mgn='[0;35m'; \
    brg='[1m'; \
    std='[m'; \
  fi; \
}
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = f=`echo $$p | sed -e 's|^.*/||'`;
am__install_max = 40
am__nobase_strip_setup = \
  srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*|]/\\\\&/g'`
am__nobase_strip = \
  for p in $$list; do echo "$$p"; done | sed -e "s|$$srcdirstrip/||"
am__nobase_list = $(am__nobase_strip_setup); \
  for p in $$list; do echo "$$p $$p"; done | \
  sed "s| $$srcdirstrip/| |;"' / .*\//!s/ .*/ ./; s,\( .*\)/[^/]*$$,\1,' | \
  $(AWK) 'BEGIN { files["."] = "" } { files[$$2] = files[$$2] " " $$1; \
    if (++n[$$2] == $(am__install_max)) \
      { print $$2, files[$$2]; n[$$2] = 0; files[$$2] = "" } } \
    END { for (dir in files) print dir, files[dir] }'
am__base_list = \
  sed '$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;$$!N;s/\n/ /g' | \
  sed '$$!N;$$!N;$$!N;$$!N;s/\n/ /g'
am__uninstall_files_from_dir = { \
  test -z "$$files" \
    || { test ! -d "$$dir" && test ! -f "$$dir" && test ! -r "$$dir"; } \
    || { echo " ( cd '$$dir' && rm -f" $$files ")"; \
         $(am__cd) "$$dir" && rm -f $$files; }; \
  }
am__recheck_rx = ^[ 	]*:recheck:[ 	]*
am__global_test_result_rx = ^[ 	]*:global-test-result:[ 	]*
am__copy_in_global_log_rx = ^[ 	]*:copy-in-global-log:[ 	]*
# A command that, given a newline-separated list of test names on the
# standard input, print the name of the tests that are to be re-run
# upon "make recheck".
am__list_recheck_tests = $(AWK) '{ \
  recheck = 1; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
        { \
          if ((getline line2 < ($$0 ".log")) < 0) \
	    recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[nN][Oo]/) \
        { \
          recheck = 0; \
          break; \
        } \
      else if (line ~ /$(am__recheck_rx)[yY][eE][sS]/) \
        { \
          break; \
        } \
    }; \
  if (recheck) \
    print $$0; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# A command that, given a newline-separated list of test names on the
# standard input, create the global log from their .trs and .log files.
am__create_global_log = $(AWK) ' \
function fatal(msg) \
{ \
  print "fatal: making $@: " msg | "cat >&2"; \
  exit 1; \
} \
function rst_section(header) \
{ \
  print header; \
  len = length(header); \
  for (i = 1; i <= len; i = i + 1) \
    printf "="; \
  printf "\n\n"; \
} \
{ \
  copy_in_global_log = 1; \
  global_test_result = "RUN"; \
  while ((rc = (getline line < ($$0 ".trs"))) != 0) \
    { \
      if (rc < 0) \
         fatal("failed to read from " $$0 ".trs"); \
      if (line ~ /$(am__global_test_result_rx)/) \
        { \
          sub("$(am__global_test_result_rx)", "", line); \
          sub("[ 	]*$$", "", line); \
          global_test_result = line; \
        } \
      else if (line ~ /$(am__copy_in_global_log_rx)[nN][oO]/) \
        copy_in_global_log = 0; \
    }; \
  if (copy_in_global_log) \
    { \
      rst_section(global_test_result ": " $$0); \
      while ((rc = (getline line < ($$0 ".log"))) != 0) \
      { \
        if (rc < 0) \
          fatal("failed to read from " $$0 ".log"); \
        print line; \
      }; \
      printf "\n"; \
    }; \
  close ($$0 ".trs"); \
  close ($$0 ".log"); \
}'
# Restructured Text title.
am__rst_title = { sed 's/.*/   &   /;h;s/./=/g;p;x;s/ *$$//;p;g' && echo; }
# Solaris 10 'make', and several other traditional 'make' implementations,
# pass "-e" to $(SHELL), and POSIX 2008 even requires this.  Work around it
# by disabling -e (using the XSI extension "set +e") if it's set.
am__sh_e_setup = case $$- in *e*) set +e;; esac
# Default flags passed to test drivers.
am__common_driver_flags = \
  --color-tests "$$am__color_tests" \
  --enable-hard-errors "$$am__enable_hard_errors" \
  --expect-failure "$$am__expect_failure"
# To be inserted before the command running the test.  Creates the
# directory for the log if needed.  Stores in $dir the directory
# containing $f, in $tst the test, in $log the log.  Executes the
# developer- defined test setup AM_TESTS_ENVIRONMENT (if any), and
# passes TESTS_ENVIRONMENT.  Set up options for the wrapper that
# will run the test scripts (or their associated LOG_COMPILER, if
# thy have one).
am__check_pre = \
$(am__sh_e_setup);					\
$(am__vpath_adj_setup) $(am__vpath_adj)			\
$(am__tty_colors);					\
srcdir=$(srcdir); export srcdir;			\
case "$@" in						\
  */*) am__odir=`echo "./$@" | sed 's|/[^/]*$$||'`;;	\
    *) am__odir=.;; 					\
esac;							\
test "x$$am__odir" = x"." || test -d "$$am__odir" 	\
  || $(MKDIR_P) "$$am__odir" || exit $$?;		\
if test -f "./$$f"; then dir=./;			\
elif test -f "$$f"; then dir=;				\
else dir="$(srcdir)/"; fi;				\
tst=$$dir$$f; log='$@'; 				\
if test -n '$(DISABLE_HARD_ERRORS)'; then		\
  am__enable_hard_errors=no; 				\
else							\
  am__enable_hard_errors=yes; 				\
fi; 							\
case " $(XFAIL_TESTS) " in				\
  *[\ \	]$$f[\ \	]* | *[\ \	]$$dir$$f[\ \	]*) \
    am__expect_failure=yes;;				\
  *)							\
    am__expect_failure=no;;				\
esac; 							\
$(AM_TESTS_ENVIRONMENT) $(TESTS_ENVIRONMENT)
# A shell command to get the names of the tests scripts with any registered
# extension removed (i.e., equivalently, the names of the test logs, with
# the '.log' extension removed).  The result is saved in the shell variable
# '$bases'.  This honors runtime overriding of TESTS and TEST_LOGS.  Sadly,
# we cannot use something simpler, involving e.g., "$(TEST_LOGS:.log=)",
# since that might cause problem with VPATH rewrites for suffix-less tests.
# See also 'test-harness-vpath-rewrite.sh' and 'test-trs-basic.sh'.
am__set_TESTS_bases = \
  bases='$(TEST_LOGS)'; \
  bases=`for i in $$bases; do echo $$i; done | sed 's/\.log$$//'`; \
  bases=`echo $$bases`
RECHECK_LOGS = $(TEST_LOGS)
AM_RECURSIVE_TARGETS = check recheck
TEST_SUITE_LOG = test-suite.log
TEST_EXTENSIONS = @EXEEXT@ .test
LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
LOG_COMPILE = $(LOG_COMPILER) $(AM_LOG_FLAGS) $(LOG_FLAGS)
am__set_b = \
  case '$@' in \
    */*) \
      case '$*' in \
        */*) b='$*';; \
          *) b=`echo '$@' | sed 's/\.log$$//'`; \
       esac;; \
    *) \
      b='$*';; \
  esac
am__test_logs1 = $(TESTS:=.log)
am__test_logs2 = $(am__test_logs1:@EXEEXT@.log=.log)
TEST_LOGS = $(am__test_logs2:.test.log=.log)
TEST_LOG_DRIVER = $(SHELL) $(top_srcdir)/test-driver
TEST_LOG_COMPILE = $(TEST_LOG_COMPILER) $(AM_TEST_LOG_FLAGS) \
	$(TEST_LOG_FLAGS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = @ACLOCAL@
AMTAR = @AMTAR@
AM_DEFAULT_VERBOSITY = @AM_DEFAULT_VERBOSITY@
AR = @AR@
AUTOCONF = @AUTOCONF@
AUTOHEADER = @AUTOHEADER@
AUTOMAKE = @AUTOMAKE@
AWK = @AWK@
CC = @CC@
CCAS = @CCAS@
CCASDEPMODE = @CCASDEPMODE@
CCASFLAGS = @CCASFLAGS@
CCDEPMODE = @CCDEPMODE@
CFLAGS = @CFLAGS@
CONFPATH = @CONFPATH@
CPP = @CPP@
CPPFLAGS = @CPPFLAGS@
CRYPTO_LIB = @CRYPTO_LIB@
CRYPT_FLAG = @CRYPT_FLAG@
CURL_LIB = @CURL_LIB@
CXX = @CXX@
CXXCPP = @CXXCPP@
CXXDEPMODE = @CXXDEPMODE@
CXXFLAGS = @CXXFLAGS@
CYGPATH_W = @CYGPATH_W@
DEFS = @DEFS@
DEPDIR = @DEPDIR@
DLLTOOL = @DLLTOOL@
DSYMUTIL = @DSYMUTIL@
DUMPBIN = @DUMPBIN@
DYNAMIC_SIMULATOR = @DYNAMIC_SIMULATOR@
ECHO_C = @ECHO_C@
ECHO_N = @ECHO_N@
ECHO_T = @ECHO_T@
EGREP = @EGREP@
ENABLED_DIRS = @ENABLED_DIRS@
EXEEXT = @EXEEXT@
FGREP = @FGREP@
GCRYPT_LIB = @GCRYPT_LIB@
GLIB_ONLY_CFLAGS = @GLIB_ONLY_CFLAGS@
GLIB_ONLY_LIBS = @GLIB_ONLY_LIBS@
GMODULE_ONLY_CFLAGS = @GMODULE_ONLY_CFLAGS@
GMODULE_ONLY_LIBS = @GMODULE_ONLY_LIBS@
GREP = @GREP@
HPICRYPT = @HPICRYPT@
HPICRYPT_MAN = @HPICRYPT_MAN@
HPI_CLIENT_PKG = @HPI_CLIENT_PKG@
HPI_LIB_VERSION = @HPI_LIB_VERSION@
HPI_PKG = @HPI_PKG@
HPI_UTIL_PKG = @HPI_UTIL_PKG@
ILO2_RIBCL = @ILO2_RIBCL@
INSTALL = @INSTALL@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
IPMI = @IPMI@
IPMIDIRECT = @IPMIDIRECT@
JSON_C_INCLUDE = @JSON_C_INCLUDE@
JSON_C_LIB = @JSON_C_LIB@
LD = @LD@
LDFLAGS = @LDFLAGS@
LIBOBJS = @LIBOBJS@
LIBS = @LIBS@
LIBTOOL = @LIBTOOL@
LIPO = @LIPO@
LN_S = @LN_S@
LTLIBOBJS = @LTLIBOBJS@
MAKEINFO = @MAKEINFO@
MAN = @MAN@
MANIFEST_TOOL = @MANIFEST_TOOL@
MKDIR_P = @MKDIR_P@
NM = @NM@
NMEDIT = @NMEDIT@
OA_SOAP = @OA_SOAP@
OBJDUMP = @OBJDUMP@
OBJEXT = @OBJEXT@
OH_SSL_INCLUDES = @OH_SSL_INCLUDES@
OPENHPI_INCLUDES = @OPENHPI_INCLUDES@
OPENIPMI_CFLAGS = @OPENIPMI_CFLAGS@
OPENIPMI_LIBS = @OPENIPMI_LIBS@
OTOOL = @OTOOL@
OTOOL64 = @OTOOL64@
OV_REST = @OV_REST@
PACKAGE = @PACKAGE@
PACKAGE_BUGREPORT = @PACKAGE_BUGREPORT@
PACKAGE_NAME = @PACKAGE_NAME@
PACKAGE_STRING = @PACKAGE_STRING@
PACKAGE_TARNAME = @PACKAGE_TARNAME@
PACKAGE_URL = @PACKAGE_URL@
PACKAGE_VERSION = @PACKAGE_VERSION@
PATH_SEPARATOR = @PATH_SEPARATOR@
RABBITMQ_LIB = @RABBITMQ_LIB@
RANLIB = @RANLIB@
RPM = @RPM@
RTAS = @RTAS@
SED = @SED@
SET_MAKE = @SET_MAKE@
SHELL = @SHELL@
SIMULATOR = @SIMULATOR@
SLAVE = @SLAVE@
SNMPDIR = @SNMPDIR@
SNMPFLAGS = @SNMPFLAGS@
SNMPLIBS = @SNMPLIBS@
SNMP_BC = @SNMP_BC@
SSLDIR = @SSLDIR@
SSL_LIB = @SSL_LIB@
STRIP = @STRIP@
SYSFS = @SYSFS@
TEST_AGENT = @TEST_AGENT@
TEST_CLEAN = @TEST_CLEAN@
VARPATH = @VARPATH@
VERSION = @VERSION@
WATCHDOG = @WATCHDOG@
WITH_ILO2_RIBCL = @WITH_ILO2_RIBCL@
WITH_IPMI = @WITH_IPMI@
WITH_OA_SOAP = @WITH_OA_SOAP@
WITH_OPENSSL = @WITH_OPENSSL@
WITH_OV_REST = @WITH_OV_REST@
WITH_RTAS = @WITH_RTAS@
WITH_SNMP_BC = @WITH_SNMP_BC@
WITH_SYSFS = @WITH_SYSFS@
XML2_INCLUDE = @XML2_INCLUDE@
XML2_LIB = @XML2_LIB@
abs_builddir = @abs_builddir@
abs_srcdir = @abs_srcdir@
abs_top_builddir = @abs_top_builddir@
abs_top_srcdir = @abs_top_srcdir@
ac_configure_args = @ac_configure_args@
ac_ct_AR = @ac_ct_AR@
ac_ct_CC = @ac_ct_CC@
ac_ct_CXX = @ac_ct_CXX@
ac_ct_DUMPBIN = @ac_ct_DUMPBIN@
am__include = @am__include@
am__leading_dot = @am__leading_dot@
am__quote = @am__quote@
am__tar = @am__tar@
am__untar = @am__untar@
base_includedir = @base_includedir@
bindir = @bindir@
build = @build@
build_alias = @build_alias@
build_cpu = @build_cpu@
build_os = @build_os@
build_vendor = @build_vendor@
builddir = @builddir@
datadir = @datadir@
datarootdir = @datarootdir@
docdir = @docdir@
dvidir = @dvidir@
exec_prefix = @exec_prefix@
found_pkg_config = @found_pkg_config@
found_pod2man = @found_pod2man@
host = @host@
host_alias = @host_alias@
host_cpu = @host_cpu@
host_os = @host_os@
host_vendor = @host_vendor@
htmldir = @htmldir@
includedir = @includedir@
infodir = @infodir@
install_sh = @install_sh@
libdir = @libdir@
libexecdir = @libexecdir@
localedir = @localedir@
localstatedir = @localstatedir@
mandir = @mandir@
mkdir_p = @mkdir_p@
oldincludedir = @oldincludedir@
pdfdir = @pdfdir@
prefix = @prefix@
program_transform_name = @program_transform_name@
psdir = @psdir@
sbindir = @sbindir@
sharedstatedir = @sharedstatedir@
srcdir = @srcdir@
sysconfdir = @sysconfdir@
target_alias = @target_alias@
top_build_prefix = @top_build_prefix@
top_builddir = @top_builddir@
top_srcdir = @top_srcdir@

# Generated files - need to keep in sync with parent directory's Makefile.am
GENERATED_EVENT_XML_MAP = event.xml
GENERATED_EVENT_CODE = el2event.c
GENERATED_CODE = $(GENERATED_EVENT_XML_MAP) $(GENERATED_EVENT_CODE)
REMOTE_SIM_SOURCES = \
		snmp_bc.c \
		snmp_bc_annunciator.c \
		snmp_bc_control.c \
	     	snmp_bc_discover.c \
		snmp_bc_discover_bc.c \
		snmp_bc_discover_rsa.c \
		snmp_bc_event.c \
		snmp_bc_inventory.c \
		snmp_bc_hotswap.c \
		snmp_bc_power.c \
		snmp_bc_reset.c \
		snmp_bc_resources.c \
		snmp_bc_resources_rsa.c \
		snmp_bc_sel.c \
		snmp_bc_sensor.c \
		snmp_bc_session.c \
	 	snmp_bc_time.c \
	 	snmp_bc_utils.c \
		snmp_bc_watchdog.c \
		snmp_bc_xml2event.c

MOSTLYCLEANFILES = @TEST_CLEAN@ $(REMOTE_SIM_SOURCES) uid_map \
	$(GENERATED_CODE)
MAINTAINERCLEANFILES = Makefile.in
AM_CPPFLAGS = -DG_LOG_DOMAIN=\"t\" @OPENHPI_INCLUDES@ \
	-I$(top_srcdir)/snmp -I$(top_srcdir)/include -I$(SNMPUTILSDIR) \
	-I$(top_srcdir)/plugins/snmp_bc
SNMPUTILSDIR = $(top_srcdir)/$(SNMPDIR)
AM_CFLAGS = @SNMPFLAGS@
# AM_CFLAGS = @CFLAGS@ -I$(top_srcdir)/include @SNMPFLAGS@
EXTRA_DIST = sim_resources.h openhpi.conf tsetup.h sim_test_file
noinst_LTLIBRARIES = libsnmp_bc.la
libsnmp_bc_la_SOURCES = \
		sim_init.c \
		sim_resources.c \
		sim_file.c \
		snmp_utils.c \
		tsetup.c

nodist_libsnmp_bc_la_SOURCES = $(GENERATED_EVENT_CODE) $(REMOTE_SIM_SOURCES)

# libopenhpi_la_LIBADD    = $(top_builddir)/utils/libopenhpiutils.la
# libopenhpi_la_LDFLAGS   = -L$(top_builddir)/utils -version-info @HPI_LIB_VERSION@ -export-symbols $(top_srcdir)/src/hpi.sym
libsnmp_bc_la_LIBADD = -luuid @SNMPLIBS@ $(top_builddir)/utils/libopenhpiutils.la
libsnmp_bc_la_LDFLAGS = -L$(top_builddir)/utils -module -version-info @HPI_LIB_VERSION@

# Keep in sync with parent directory's Makefile.am
# FIXME:: Be nice if auto-generation rules where just in snmp_bc/Makefile.am
# and not repeated here; but t directory is done first.
EVENT_MAP_FILE = $(top_srcdir)/plugins/snmp_bc/snmp_bc_event.map
EVENT_MAP_SCRIPT = $(top_srcdir)/plugins/snmp_bc/eventmap2code.pl
EVENT_XML_MAP_SCRIPT = $(top_srcdir)/scripts/text2cstr.pl

# Setup environment variables for TESTS programs
#TESTS_ENVIRONMENT += OPENHPI_ERROR=YES
#TESTS_ENVIRONMENT += OPENHPI_DEBUG=YES
TESTS_ENVIRONMENT = OPENHPI_CONF=$(srcdir)/openhpi.conf \
	OPENHPI_SIMTEST_FILE=$(srcdir)/sim_test_file \
	LD_LIBRARY_PATH=$(top_srcdir)/openhpid/.libs:$(top_srcdir)/ssl/.libs:$(top_srcdir)/utils/.libs:$(top_srcdir)/plugins/snmp/.libs:$(top_srcdir)/plugins/snmp_bc/t/.libs \
	OPENHPI_UID_MAP=$(shell pwd)/uid_map OPENHPI_PATH=$(shell pwd)

# Unit test using normal IF calls and simulation library
setup_conf_SOURCES = setup_conf.c

# Unit test using normal IF calls and simulation library
tsim_file_SOURCES = tsim_file.c
tsim_file_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


# Unit test using normal IF calls and simulation library
tevent_SOURCES = tevent.c
tevent_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


# Unit test using normal IF calls and simulation library
tcontrol_parms_SOURCES = tcontrol_parms.c
tcontrol_parms_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


# Unit test using normal IF calls and simulation library
tset_resource_tag_SOURCES = tset_resource_tag.c
tset_resource_tag_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


# Unit test using normal IF calls and simulation library
tset_resource_sev_SOURCES = tset_resource_sev.c
tset_resource_sev_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


# Unit test using normal IF calls and simulation library
tsnmp_bc_getset_SOURCES = tsnmp_bc_getset.c
tsnmp_bc_getset_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget001_SOURCES = tsensorget001.c
tsensorget001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget002_SOURCES = tsensorget002.c
tsensorget002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget003_SOURCES = tsensorget003.c
tsensorget003_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget004_SOURCES = tsensorget004.c
tsensorget004_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget005_SOURCES = tsensorget005.c
tsensorget005_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget010_SOURCES = tsensorget010.c
tsensorget010_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget013_SOURCES = tsensorget013.c
tsensorget013_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget016_SOURCES = tsensorget016.c
tsensorget016_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget031_SOURCES = tsensorget031.c
tsensorget031_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget033_SOURCES = tsensorget033.c
tsensorget033_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget034_SOURCES = tsensorget034.c
tsensorget034_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget035_SOURCES = tsensorget035.c
tsensorget035_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget036_SOURCES = tsensorget036.c
tsensorget036_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget040_SOURCES = tsensorget040.c
tsensorget040_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorget041_SOURCES = tsensorget041.c
tsensorget041_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset001_SOURCES = tsensorset001.c
tsensorset001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset002_SOURCES = tsensorset002.c
tsensorset002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset003_SOURCES = tsensorset003.c
tsensorset003_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset004_SOURCES = tsensorset004.c
tsensorset004_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset005_SOURCES = tsensorset005.c
tsensorset005_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset006_SOURCES = tsensorset006.c
tsensorset006_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset007_SOURCES = tsensorset007.c
tsensorset007_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset008_SOURCES = tsensorset008.c
tsensorset008_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset009_SOURCES = tsensorset009.c
tsensorset009_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset010_SOURCES = tsensorset010.c
tsensorset010_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset011_SOURCES = tsensorset011.c
tsensorset011_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset012_SOURCES = tsensorset012.c
tsensorset012_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset013_SOURCES = tsensorset013.c
tsensorset013_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset015_SOURCES = tsensorset015.c
tsensorset015_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset017_SOURCES = tsensorset017.c
tsensorset017_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset018_SOURCES = tsensorset018.c
tsensorset018_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset019_SOURCES = tsensorset019.c
tsensorset019_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset020_SOURCES = tsensorset020.c
tsensorset020_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset021_SOURCES = tsensorset021.c
tsensorset021_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset022_SOURCES = tsensorset022.c
tsensorset022_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset023_SOURCES = tsensorset023.c
tsensorset023_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsensorset024_SOURCES = tsensorset024.c
tsensorset024_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel001_SOURCES = tel001.c
tel001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel002_SOURCES = tel002.c
tel002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel003_SOURCES = tel003.c
tel003_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel004_SOURCES = tel004.c
tel004_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel005_SOURCES = tel005.c
tel005_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel006_SOURCES = tel006.c
tel006_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tel007_SOURCES = tel007.c
tel007_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv001_SOURCES = tinv001.c
tinv001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv002_SOURCES = tinv002.c
tinv002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv003_SOURCES = tinv003.c
tinv003_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv004_SOURCES = tinv004.c
tinv004_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv005_SOURCES = tinv005.c
tinv005_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv006_SOURCES = tinv006.c
tinv006_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tinv007_SOURCES = tinv007.c
tinv007_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
thotswap001_SOURCES = thotswap001.c
thotswap001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
thotswap_mhs001_SOURCES = thotswap-mhs001.c
thotswap_mhs001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
thotswap_simple001_SOURCES = thotswap-simple001.c
thotswap_simple001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tpower001_SOURCES = tpower001.c
tpower001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
treset001_SOURCES = treset001.c
treset001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsptime001_SOURCES = tsptime001.c
tsptime001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tsptime002_SOURCES = tsptime002.c
tsptime002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tdiscover001_SOURCES = tdiscover001.c
tdiscover001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
#tdiscover002_SOURCES = tdiscover002.c
#tdiscover002_LDADD   = $(top_builddir)/utils/libopenhpiutils.la \
#		 $(top_builddir)/openhpid/libopenhpidaemon.la \
#		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la

#
tcontrol001_SOURCES = tcontrol001.c
tcontrol001_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tcontrol002_SOURCES = tcontrol002.c
tcontrol002_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la


#
tcontrol003_SOURCES = tcontrol003.c
tcontrol003_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la

tcontrolfailover_SOURCES = tcontrolfailover.c
tcontrolfailover_LDADD = $(top_builddir)/utils/libopenhpiutils.la \
		 $(top_builddir)/openhpid/libopenhpidaemon.la \
		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .log .o .obj .test .test$(EXEEXT) .trs
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign plugins/snmp_bc/t/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign plugins/snmp_bc/t/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

setup_conf$(EXEEXT): $(setup_conf_OBJECTS) $(setup_conf_DEPENDENCIES) $(EXTRA_setup_conf_DEPENDENCIES) 
	@rm -f setup_conf$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(setup_conf_OBJECTS) $(setup_conf_LDADD) $(LIBS)

tcontrol001$(EXEEXT): $(tcontrol001_OBJECTS) $(tcontrol001_DEPENDENCIES) $(EXTRA_tcontrol001_DEPENDENCIES) 
	@rm -f tcontrol001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcontrol001_OBJECTS) $(tcontrol001_LDADD) $(LIBS)

tcontrol002$(EXEEXT): $(tcontrol002_OBJECTS) $(tcontrol002_DEPENDENCIES) $(EXTRA_tcontrol002_DEPENDENCIES) 
	@rm -f tcontrol002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcontrol002_OBJECTS) $(tcontrol002_LDADD) $(LIBS)

tcontrol003$(EXEEXT): $(tcontrol003_OBJECTS) $(tcontrol003_DEPENDENCIES) $(EXTRA_tcontrol003_DEPENDENCIES) 
	@rm -f tcontrol003$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcontrol003_OBJECTS) $(tcontrol003_LDADD) $(LIBS)

tcontrol_parms$(EXEEXT): $(tcontrol_parms_OBJECTS) $(tcontrol_parms_DEPENDENCIES) $(EXTRA_tcontrol_parms_DEPENDENCIES) 
	@rm -f tcontrol_parms$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcontrol_parms_OBJECTS) $(tcontrol_parms_LDADD) $(LIBS)

tcontrolfailover$(EXEEXT): $(tcontrolfailover_OBJECTS) $(tcontrolfailover_DEPENDENCIES) $(EXTRA_tcontrolfailover_DEPENDENCIES) 
	@rm -f tcontrolfailover$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tcontrolfailover_OBJECTS) $(tcontrolfailover_LDADD) $(LIBS)

tdiscover001$(EXEEXT): $(tdiscover001_OBJECTS) $(tdiscover001_DEPENDENCIES) $(EXTRA_tdiscover001_DEPENDENCIES) 
	@rm -f tdiscover001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tdiscover001_OBJECTS) $(tdiscover001_LDADD) $(LIBS)

tel001$(EXEEXT): $(tel001_OBJECTS) $(tel001_DEPENDENCIES) $(EXTRA_tel001_DEPENDENCIES) 
	@rm -f tel001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel001_OBJECTS) $(tel001_LDADD) $(LIBS)

tel002$(EXEEXT): $(tel002_OBJECTS) $(tel002_DEPENDENCIES) $(EXTRA_tel002_DEPENDENCIES) 
	@rm -f tel002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel002_OBJECTS) $(tel002_LDADD) $(LIBS)

tel003$(EXEEXT): $(tel003_OBJECTS) $(tel003_DEPENDENCIES) $(EXTRA_tel003_DEPENDENCIES) 
	@rm -f tel003$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel003_OBJECTS) $(tel003_LDADD) $(LIBS)

tel004$(EXEEXT): $(tel004_OBJECTS) $(tel004_DEPENDENCIES) $(EXTRA_tel004_DEPENDENCIES) 
	@rm -f tel004$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel004_OBJECTS) $(tel004_LDADD) $(LIBS)

tel005$(EXEEXT): $(tel005_OBJECTS) $(tel005_DEPENDENCIES) $(EXTRA_tel005_DEPENDENCIES) 
	@rm -f tel005$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel005_OBJECTS) $(tel005_LDADD) $(LIBS)

tel006$(EXEEXT): $(tel006_OBJECTS) $(tel006_DEPENDENCIES) $(EXTRA_tel006_DEPENDENCIES) 
	@rm -f tel006$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel006_OBJECTS) $(tel006_LDADD) $(LIBS)

tel007$(EXEEXT): $(tel007_OBJECTS) $(tel007_DEPENDENCIES) $(EXTRA_tel007_DEPENDENCIES) 
	@rm -f tel007$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tel007_OBJECTS) $(tel007_LDADD) $(LIBS)

tevent$(EXEEXT): $(tevent_OBJECTS) $(tevent_DEPENDENCIES) $(EXTRA_tevent_DEPENDENCIES) 
	@rm -f tevent$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tevent_OBJECTS) $(tevent_LDADD) $(LIBS)

thotswap-mhs001$(EXEEXT): $(thotswap_mhs001_OBJECTS) $(thotswap_mhs001_DEPENDENCIES) $(EXTRA_thotswap_mhs001_DEPENDENCIES) 
	@rm -f thotswap-mhs001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thotswap_mhs001_OBJECTS) $(thotswap_mhs001_LDADD) $(LIBS)

thotswap-simple001$(EXEEXT): $(thotswap_simple001_OBJECTS) $(thotswap_simple001_DEPENDENCIES) $(EXTRA_thotswap_simple001_DEPENDENCIES) 
	@rm -f thotswap-simple001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thotswap_simple001_OBJECTS) $(thotswap_simple001_LDADD) $(LIBS)

thotswap001$(EXEEXT): $(thotswap001_OBJECTS) $(thotswap001_DEPENDENCIES) $(EXTRA_thotswap001_DEPENDENCIES) 
	@rm -f thotswap001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(thotswap001_OBJECTS) $(thotswap001_LDADD) $(LIBS)

tinv001$(EXEEXT): $(tinv001_OBJECTS) $(tinv001_DEPENDENCIES) $(EXTRA_tinv001_DEPENDENCIES) 
	@rm -f tinv001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv001_OBJECTS) $(tinv001_LDADD) $(LIBS)

tinv002$(EXEEXT): $(tinv002_OBJECTS) $(tinv002_DEPENDENCIES) $(EXTRA_tinv002_DEPENDENCIES) 
	@rm -f tinv002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv002_OBJECTS) $(tinv002_LDADD) $(LIBS)

tinv003$(EXEEXT): $(tinv003_OBJECTS) $(tinv003_DEPENDENCIES) $(EXTRA_tinv003_DEPENDENCIES) 
	@rm -f tinv003$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv003_OBJECTS) $(tinv003_LDADD) $(LIBS)

tinv004$(EXEEXT): $(tinv004_OBJECTS) $(tinv004_DEPENDENCIES) $(EXTRA_tinv004_DEPENDENCIES) 
	@rm -f tinv004$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv004_OBJECTS) $(tinv004_LDADD) $(LIBS)

tinv005$(EXEEXT): $(tinv005_OBJECTS) $(tinv005_DEPENDENCIES) $(EXTRA_tinv005_DEPENDENCIES) 
	@rm -f tinv005$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv005_OBJECTS) $(tinv005_LDADD) $(LIBS)

tinv006$(EXEEXT): $(tinv006_OBJECTS) $(tinv006_DEPENDENCIES) $(EXTRA_tinv006_DEPENDENCIES) 
	@rm -f tinv006$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv006_OBJECTS) $(tinv006_LDADD) $(LIBS)

tinv007$(EXEEXT): $(tinv007_OBJECTS) $(tinv007_DEPENDENCIES) $(EXTRA_tinv007_DEPENDENCIES) 
	@rm -f tinv007$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tinv007_OBJECTS) $(tinv007_LDADD) $(LIBS)

tpower001$(EXEEXT): $(tpower001_OBJECTS) $(tpower001_DEPENDENCIES) $(EXTRA_tpower001_DEPENDENCIES) 
	@rm -f tpower001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tpower001_OBJECTS) $(tpower001_LDADD) $(LIBS)

treset001$(EXEEXT): $(treset001_OBJECTS) $(treset001_DEPENDENCIES) $(EXTRA_treset001_DEPENDENCIES) 
	@rm -f treset001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(treset001_OBJECTS) $(treset001_LDADD) $(LIBS)

tsensorget001$(EXEEXT): $(tsensorget001_OBJECTS) $(tsensorget001_DEPENDENCIES) $(EXTRA_tsensorget001_DEPENDENCIES) 
	@rm -f tsensorget001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget001_OBJECTS) $(tsensorget001_LDADD) $(LIBS)

tsensorget002$(EXEEXT): $(tsensorget002_OBJECTS) $(tsensorget002_DEPENDENCIES) $(EXTRA_tsensorget002_DEPENDENCIES) 
	@rm -f tsensorget002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget002_OBJECTS) $(tsensorget002_LDADD) $(LIBS)

tsensorget003$(EXEEXT): $(tsensorget003_OBJECTS) $(tsensorget003_DEPENDENCIES) $(EXTRA_tsensorget003_DEPENDENCIES) 
	@rm -f tsensorget003$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget003_OBJECTS) $(tsensorget003_LDADD) $(LIBS)

tsensorget004$(EXEEXT): $(tsensorget004_OBJECTS) $(tsensorget004_DEPENDENCIES) $(EXTRA_tsensorget004_DEPENDENCIES) 
	@rm -f tsensorget004$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget004_OBJECTS) $(tsensorget004_LDADD) $(LIBS)

tsensorget005$(EXEEXT): $(tsensorget005_OBJECTS) $(tsensorget005_DEPENDENCIES) $(EXTRA_tsensorget005_DEPENDENCIES) 
	@rm -f tsensorget005$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget005_OBJECTS) $(tsensorget005_LDADD) $(LIBS)

tsensorget010$(EXEEXT): $(tsensorget010_OBJECTS) $(tsensorget010_DEPENDENCIES) $(EXTRA_tsensorget010_DEPENDENCIES) 
	@rm -f tsensorget010$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget010_OBJECTS) $(tsensorget010_LDADD) $(LIBS)

tsensorget013$(EXEEXT): $(tsensorget013_OBJECTS) $(tsensorget013_DEPENDENCIES) $(EXTRA_tsensorget013_DEPENDENCIES) 
	@rm -f tsensorget013$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget013_OBJECTS) $(tsensorget013_LDADD) $(LIBS)

tsensorget016$(EXEEXT): $(tsensorget016_OBJECTS) $(tsensorget016_DEPENDENCIES) $(EXTRA_tsensorget016_DEPENDENCIES) 
	@rm -f tsensorget016$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget016_OBJECTS) $(tsensorget016_LDADD) $(LIBS)

tsensorget031$(EXEEXT): $(tsensorget031_OBJECTS) $(tsensorget031_DEPENDENCIES) $(EXTRA_tsensorget031_DEPENDENCIES) 
	@rm -f tsensorget031$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget031_OBJECTS) $(tsensorget031_LDADD) $(LIBS)

tsensorget033$(EXEEXT): $(tsensorget033_OBJECTS) $(tsensorget033_DEPENDENCIES) $(EXTRA_tsensorget033_DEPENDENCIES) 
	@rm -f tsensorget033$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget033_OBJECTS) $(tsensorget033_LDADD) $(LIBS)

tsensorget034$(EXEEXT): $(tsensorget034_OBJECTS) $(tsensorget034_DEPENDENCIES) $(EXTRA_tsensorget034_DEPENDENCIES) 
	@rm -f tsensorget034$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget034_OBJECTS) $(tsensorget034_LDADD) $(LIBS)

tsensorget035$(EXEEXT): $(tsensorget035_OBJECTS) $(tsensorget035_DEPENDENCIES) $(EXTRA_tsensorget035_DEPENDENCIES) 
	@rm -f tsensorget035$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget035_OBJECTS) $(tsensorget035_LDADD) $(LIBS)

tsensorget036$(EXEEXT): $(tsensorget036_OBJECTS) $(tsensorget036_DEPENDENCIES) $(EXTRA_tsensorget036_DEPENDENCIES) 
	@rm -f tsensorget036$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget036_OBJECTS) $(tsensorget036_LDADD) $(LIBS)

tsensorget040$(EXEEXT): $(tsensorget040_OBJECTS) $(tsensorget040_DEPENDENCIES) $(EXTRA_tsensorget040_DEPENDENCIES) 
	@rm -f tsensorget040$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget040_OBJECTS) $(tsensorget040_LDADD) $(LIBS)

tsensorget041$(EXEEXT): $(tsensorget041_OBJECTS) $(tsensorget041_DEPENDENCIES) $(EXTRA_tsensorget041_DEPENDENCIES) 
	@rm -f tsensorget041$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorget041_OBJECTS) $(tsensorget041_LDADD) $(LIBS)

tsensorset001$(EXEEXT): $(tsensorset001_OBJECTS) $(tsensorset001_DEPENDENCIES) $(EXTRA_tsensorset001_DEPENDENCIES) 
	@rm -f tsensorset001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset001_OBJECTS) $(tsensorset001_LDADD) $(LIBS)

tsensorset002$(EXEEXT): $(tsensorset002_OBJECTS) $(tsensorset002_DEPENDENCIES) $(EXTRA_tsensorset002_DEPENDENCIES) 
	@rm -f tsensorset002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset002_OBJECTS) $(tsensorset002_LDADD) $(LIBS)

tsensorset003$(EXEEXT): $(tsensorset003_OBJECTS) $(tsensorset003_DEPENDENCIES) $(EXTRA_tsensorset003_DEPENDENCIES) 
	@rm -f tsensorset003$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset003_OBJECTS) $(tsensorset003_LDADD) $(LIBS)

tsensorset004$(EXEEXT): $(tsensorset004_OBJECTS) $(tsensorset004_DEPENDENCIES) $(EXTRA_tsensorset004_DEPENDENCIES) 
	@rm -f tsensorset004$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset004_OBJECTS) $(tsensorset004_LDADD) $(LIBS)

tsensorset005$(EXEEXT): $(tsensorset005_OBJECTS) $(tsensorset005_DEPENDENCIES) $(EXTRA_tsensorset005_DEPENDENCIES) 
	@rm -f tsensorset005$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset005_OBJECTS) $(tsensorset005_LDADD) $(LIBS)

tsensorset006$(EXEEXT): $(tsensorset006_OBJECTS) $(tsensorset006_DEPENDENCIES) $(EXTRA_tsensorset006_DEPENDENCIES) 
	@rm -f tsensorset006$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset006_OBJECTS) $(tsensorset006_LDADD) $(LIBS)

tsensorset007$(EXEEXT): $(tsensorset007_OBJECTS) $(tsensorset007_DEPENDENCIES) $(EXTRA_tsensorset007_DEPENDENCIES) 
	@rm -f tsensorset007$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset007_OBJECTS) $(tsensorset007_LDADD) $(LIBS)

tsensorset008$(EXEEXT): $(tsensorset008_OBJECTS) $(tsensorset008_DEPENDENCIES) $(EXTRA_tsensorset008_DEPENDENCIES) 
	@rm -f tsensorset008$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset008_OBJECTS) $(tsensorset008_LDADD) $(LIBS)

tsensorset009$(EXEEXT): $(tsensorset009_OBJECTS) $(tsensorset009_DEPENDENCIES) $(EXTRA_tsensorset009_DEPENDENCIES) 
	@rm -f tsensorset009$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset009_OBJECTS) $(tsensorset009_LDADD) $(LIBS)

tsensorset010$(EXEEXT): $(tsensorset010_OBJECTS) $(tsensorset010_DEPENDENCIES) $(EXTRA_tsensorset010_DEPENDENCIES) 
	@rm -f tsensorset010$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset010_OBJECTS) $(tsensorset010_LDADD) $(LIBS)

tsensorset011$(EXEEXT): $(tsensorset011_OBJECTS) $(tsensorset011_DEPENDENCIES) $(EXTRA_tsensorset011_DEPENDENCIES) 
	@rm -f tsensorset011$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset011_OBJECTS) $(tsensorset011_LDADD) $(LIBS)

tsensorset012$(EXEEXT): $(tsensorset012_OBJECTS) $(tsensorset012_DEPENDENCIES) $(EXTRA_tsensorset012_DEPENDENCIES) 
	@rm -f tsensorset012$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset012_OBJECTS) $(tsensorset012_LDADD) $(LIBS)

tsensorset013$(EXEEXT): $(tsensorset013_OBJECTS) $(tsensorset013_DEPENDENCIES) $(EXTRA_tsensorset013_DEPENDENCIES) 
	@rm -f tsensorset013$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset013_OBJECTS) $(tsensorset013_LDADD) $(LIBS)

tsensorset015$(EXEEXT): $(tsensorset015_OBJECTS) $(tsensorset015_DEPENDENCIES) $(EXTRA_tsensorset015_DEPENDENCIES) 
	@rm -f tsensorset015$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset015_OBJECTS) $(tsensorset015_LDADD) $(LIBS)

tsensorset017$(EXEEXT): $(tsensorset017_OBJECTS) $(tsensorset017_DEPENDENCIES) $(EXTRA_tsensorset017_DEPENDENCIES) 
	@rm -f tsensorset017$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset017_OBJECTS) $(tsensorset017_LDADD) $(LIBS)

tsensorset018$(EXEEXT): $(tsensorset018_OBJECTS) $(tsensorset018_DEPENDENCIES) $(EXTRA_tsensorset018_DEPENDENCIES) 
	@rm -f tsensorset018$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset018_OBJECTS) $(tsensorset018_LDADD) $(LIBS)

tsensorset019$(EXEEXT): $(tsensorset019_OBJECTS) $(tsensorset019_DEPENDENCIES) $(EXTRA_tsensorset019_DEPENDENCIES) 
	@rm -f tsensorset019$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset019_OBJECTS) $(tsensorset019_LDADD) $(LIBS)

tsensorset020$(EXEEXT): $(tsensorset020_OBJECTS) $(tsensorset020_DEPENDENCIES) $(EXTRA_tsensorset020_DEPENDENCIES) 
	@rm -f tsensorset020$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset020_OBJECTS) $(tsensorset020_LDADD) $(LIBS)

tsensorset021$(EXEEXT): $(tsensorset021_OBJECTS) $(tsensorset021_DEPENDENCIES) $(EXTRA_tsensorset021_DEPENDENCIES) 
	@rm -f tsensorset021$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset021_OBJECTS) $(tsensorset021_LDADD) $(LIBS)

tsensorset022$(EXEEXT): $(tsensorset022_OBJECTS) $(tsensorset022_DEPENDENCIES) $(EXTRA_tsensorset022_DEPENDENCIES) 
	@rm -f tsensorset022$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset022_OBJECTS) $(tsensorset022_LDADD) $(LIBS)

tsensorset023$(EXEEXT): $(tsensorset023_OBJECTS) $(tsensorset023_DEPENDENCIES) $(EXTRA_tsensorset023_DEPENDENCIES) 
	@rm -f tsensorset023$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset023_OBJECTS) $(tsensorset023_LDADD) $(LIBS)

tsensorset024$(EXEEXT): $(tsensorset024_OBJECTS) $(tsensorset024_DEPENDENCIES) $(EXTRA_tsensorset024_DEPENDENCIES) 
	@rm -f tsensorset024$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsensorset024_OBJECTS) $(tsensorset024_LDADD) $(LIBS)

tset_resource_sev$(EXEEXT): $(tset_resource_sev_OBJECTS) $(tset_resource_sev_DEPENDENCIES) $(EXTRA_tset_resource_sev_DEPENDENCIES) 
	@rm -f tset_resource_sev$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_resource_sev_OBJECTS) $(tset_resource_sev_LDADD) $(LIBS)

tset_resource_tag$(EXEEXT): $(tset_resource_tag_OBJECTS) $(tset_resource_tag_DEPENDENCIES) $(EXTRA_tset_resource_tag_DEPENDENCIES) 
	@rm -f tset_resource_tag$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tset_resource_tag_OBJECTS) $(tset_resource_tag_LDADD) $(LIBS)

tsim_file$(EXEEXT): $(tsim_file_OBJECTS) $(tsim_file_DEPENDENCIES) $(EXTRA_tsim_file_DEPENDENCIES) 
	@rm -f tsim_file$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsim_file_OBJECTS) $(tsim_file_LDADD) $(LIBS)

tsnmp_bc_getset$(EXEEXT): $(tsnmp_bc_getset_OBJECTS) $(tsnmp_bc_getset_DEPENDENCIES) $(EXTRA_tsnmp_bc_getset_DEPENDENCIES) 
	@rm -f tsnmp_bc_getset$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsnmp_bc_getset_OBJECTS) $(tsnmp_bc_getset_LDADD) $(LIBS)

tsptime001$(EXEEXT): $(tsptime001_OBJECTS) $(tsptime001_DEPENDENCIES) $(EXTRA_tsptime001_DEPENDENCIES) 
	@rm -f tsptime001$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsptime001_OBJECTS) $(tsptime001_LDADD) $(LIBS)

tsptime002$(EXEEXT): $(tsptime002_OBJECTS) $(tsptime002_DEPENDENCIES) $(EXTRA_tsptime002_DEPENDENCIES) 
	@rm -f tsptime002$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(tsptime002_OBJECTS) $(tsptime002_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/el2event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/setup_conf.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_file.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_init.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/sim_resources.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_annunciator.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_control.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_discover.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_discover_bc.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_discover_rsa.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_hotswap.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_inventory.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_power.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_reset.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_resources.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_resources_rsa.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_sel.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_sensor.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_session.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_time.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_watchdog.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_bc_xml2event.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/snmp_utils.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcontrol001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcontrol002.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcontrol003.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcontrol_parms.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tcontrolfailover.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tdiscover001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel002.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel003.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel004.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel005.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel006.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tel007.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tevent.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thotswap-mhs001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thotswap-simple001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/thotswap001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv002.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv003.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv004.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv005.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv006.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tinv007.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tpower001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/treset001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget002.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget003.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget004.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget005.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget010.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget013.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget016.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget031.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget033.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget034.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget035.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget036.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget040.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorget041.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset002.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset003.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset004.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset005.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset006.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset007.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset008.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset009.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset010.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset011.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset012.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset013.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset015.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset017.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset018.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset019.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset020.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset021.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset022.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset023.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsensorset024.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_resource_sev.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tset_resource_tag.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsetup.Plo@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsim_file.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsnmp_bc_getset.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsptime001.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@./$(DEPDIR)/tsptime002.Po@am__quote@

.c.o:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c $<

.c.obj:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(COMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(COMPILE) -c `$(CYGPATH_W) '$<'`

.c.lo:
@am__fastdepCC_TRUE@	$(AM_V_CC)$(LTCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
@am__fastdepCC_TRUE@	$(AM_V_at)$(am__mv) $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
@AMDEP_TRUE@@am__fastdepCC_FALSE@	$(AM_V_CC)source='$<' object='$@' libtool=yes @AMDEPBACKSLASH@
@AMDEP_TRUE@@am__fastdepCC_FALSE@	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) @AMDEPBACKSLASH@
@am__fastdepCC_FALSE@	$(AM_V_CC@am__nodep@)$(LTCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

# Recover from deleted '.trs' file; this should ensure that
# "rm -f foo.log; make foo.trs" re-run 'foo.test', and re-create
# both 'foo.log' and 'foo.trs'.  Break the recipe in two subshells
# to avoid problems with "make -n".
.log.trs:
	rm -f $< $@
	$(MAKE) $(AM_MAKEFLAGS) $<

# Leading 'am--fnord' is there to ensure the list of targets does not
# expand to empty, as could happen e.g. with make check TESTS=''.
am--fnord $(TEST_LOGS) $(TEST_LOGS:.log=.trs): $(am__force_recheck)
am--force-recheck:
	@:

$(TEST_SUITE_LOG): $(TEST_LOGS)
	@$(am__set_TESTS_bases); \
	am__f_ok () { test -f "$$1" && test -r "$$1"; }; \
	redo_bases=`for i in $$bases; do \
	              am__f_ok $$i.trs && am__f_ok $$i.log || echo $$i; \
	            done`; \
	if test -n "$$redo_bases"; then \
	  redo_logs=`for i in $$redo_bases; do echo $$i.log; done`; \
	  redo_results=`for i in $$redo_bases; do echo $$i.trs; done`; \
	  if $(am__make_dryrun); then :; else \
	    rm -f $$redo_logs && rm -f $$redo_results || exit 1; \
	  fi; \
	fi; \
	if test -n "$$am__remaking_logs"; then \
	  echo "fatal: making $(TEST_SUITE_LOG): possible infinite" \
	       "recursion detected" >&2; \
	else \
	  am__remaking_logs=yes $(MAKE) $(AM_MAKEFLAGS) $$redo_logs; \
	fi; \
	if $(am__make_dryrun); then :; else \
	  st=0;  \
	  errmsg="fatal: making $(TEST_SUITE_LOG): failed to create"; \
	  for i in $$redo_bases; do \
	    test -f $$i.trs && test -r $$i.trs \
	      || { echo "$$errmsg $$i.trs" >&2; st=1; }; \
	    test -f $$i.log && test -r $$i.log \
	      || { echo "$$errmsg $$i.log" >&2; st=1; }; \
	  done; \
	  test $$st -eq 0 || exit 1; \
	fi
	@$(am__sh_e_setup); $(am__tty_colors); $(am__set_TESTS_bases); \
	ws='[ 	]'; \
	results=`for b in $$bases; do echo $$b.trs; done`; \
	test -n "$$results" || results=/dev/null; \
	all=`  grep "^$$ws*:test-result:"           $$results | wc -l`; \
	pass=` grep "^$$ws*:test-result:$$ws*PASS"  $$results | wc -l`; \
	fail=` grep "^$$ws*:test-result:$$ws*FAIL"  $$results | wc -l`; \
	skip=` grep "^$$ws*:test-result:$$ws*SKIP"  $$results | wc -l`; \
	xfail=`grep "^$$ws*:test-result:$$ws*XFAIL" $$results | wc -l`; \
	xpass=`grep "^$$ws*:test-result:$$ws*XPASS" $$results | wc -l`; \
	error=`grep "^$$ws*:test-result:$$ws*ERROR" $$results | wc -l`; \
	if test `expr $$fail + $$xpass + $$error` -eq 0; then \
	  success=true; \
	else \
	  success=false; \
	fi; \
	br='==================='; br=$$br$$br$$br$$br; \
	result_count () \
	{ \
	    if test x"$$1" = x"--maybe-color"; then \
	      maybe_colorize=yes; \
	    elif test x"$$1" = x"--no-color"; then \
	      maybe_colorize=no; \
	    else \
	      echo "$@: invalid 'result_count' usage" >&2; exit 4; \
	    fi; \
	    shift; \
	    desc=$$1 count=$$2; \
	    if test $$maybe_colorize = yes && test $$count -gt 0; then \
	      color_start=$$3 color_end=$$std; \
	    else \
	      color_start= color_end=; \
	    fi; \
	    echo "$${color_start}# $$desc $$count$${color_end}"; \
	}; \
	create_testsuite_report () \
	{ \
	  result_count $$1 "TOTAL:" $$all   "$$brg"; \
	  result_count $$1 "PASS: " $$pass  "$$grn"; \
	  result_count $$1 "SKIP: " $$skip  "$$blu"; \
	  result_count $$1 "XFAIL:" $$xfail "$$lgn"; \
	  result_count $$1 "FAIL: " $$fail  "$$red"; \
	  result_count $$1 "XPASS:" $$xpass "$$red"; \
	  result_count $$1 "ERROR:" $$error "$$mgn"; \
	}; \
	{								\
	  echo "$(PACKAGE_STRING): $(subdir)/$(TEST_SUITE_LOG)" |	\
	    $(am__rst_title);						\
	  create_testsuite_report --no-color;				\
	  echo;								\
	  echo ".. contents:: :depth: 2";				\
	  echo;								\
	  for b in $$bases; do echo $$b; done				\
	    | $(am__create_global_log);					\
	} >$(TEST_SUITE_LOG).tmp || exit 1;				\
	mv $(TEST_SUITE_LOG).tmp $(TEST_SUITE_LOG);			\
	if $$success; then						\
	  col="$$grn";							\
	 else								\
	  col="$$red";							\
	  test x"$$VERBOSE" = x || cat $(TEST_SUITE_LOG);		\
	fi;								\
	echo "$${col}$$br$${std}"; 					\
	echo "$${col}Testsuite summary for $(PACKAGE_STRING)$${std}";	\
	echo "$${col}$$br$${std}"; 					\
	create_testsuite_report --maybe-color;				\
	echo "$$col$$br$$std";						\
	if $$success; then :; else					\
	  echo "$${col}See $(subdir)/$(TEST_SUITE_LOG)$${std}";		\
	  if test -n "$(PACKAGE_BUGREPORT)"; then			\
	    echo "$${col}Please report to $(PACKAGE_BUGREPORT)$${std}";	\
	  fi;								\
	  echo "$$col$$br$$std";					\
	fi;								\
	$$success || exit 1

check-TESTS:
	@list='$(RECHECK_LOGS)';           test -z "$$list" || rm -f $$list
	@list='$(RECHECK_LOGS:.log=.trs)'; test -z "$$list" || rm -f $$list
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	trs_list=`for i in $$bases; do echo $$i.trs; done`; \
	log_list=`echo $$log_list`; trs_list=`echo $$trs_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) TEST_LOGS="$$log_list"; \
	exit $$?;
recheck: all $(check_PROGRAMS)
	@test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)
	@set +e; $(am__set_TESTS_bases); \
	bases=`for i in $$bases; do echo $$i; done \
	         | $(am__list_recheck_tests)` || exit 1; \
	log_list=`for i in $$bases; do echo $$i.log; done`; \
	log_list=`echo $$log_list`; \
	$(MAKE) $(AM_MAKEFLAGS) $(TEST_SUITE_LOG) \
	        am__force_recheck=am--force-recheck \
	        TEST_LOGS="$$log_list"; \
	exit $$?
setup_conf.log: setup_conf$(EXEEXT)
	@p='setup_conf$(EXEEXT)'; \
	b='setup_conf'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsim_file.log: tsim_file$(EXEEXT)
	@p='tsim_file$(EXEEXT)'; \
	b='tsim_file'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tevent.log: tevent$(EXEEXT)
	@p='tevent$(EXEEXT)'; \
	b='tevent'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcontrol_parms.log: tcontrol_parms$(EXEEXT)
	@p='tcontrol_parms$(EXEEXT)'; \
	b='tcontrol_parms'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_resource_tag.log: tset_resource_tag$(EXEEXT)
	@p='tset_resource_tag$(EXEEXT)'; \
	b='tset_resource_tag'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tset_resource_sev.log: tset_resource_sev$(EXEEXT)
	@p='tset_resource_sev$(EXEEXT)'; \
	b='tset_resource_sev'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsnmp_bc_getset.log: tsnmp_bc_getset$(EXEEXT)
	@p='tsnmp_bc_getset$(EXEEXT)'; \
	b='tsnmp_bc_getset'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget001.log: tsensorget001$(EXEEXT)
	@p='tsensorget001$(EXEEXT)'; \
	b='tsensorget001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget002.log: tsensorget002$(EXEEXT)
	@p='tsensorget002$(EXEEXT)'; \
	b='tsensorget002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget003.log: tsensorget003$(EXEEXT)
	@p='tsensorget003$(EXEEXT)'; \
	b='tsensorget003'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget004.log: tsensorget004$(EXEEXT)
	@p='tsensorget004$(EXEEXT)'; \
	b='tsensorget004'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget005.log: tsensorget005$(EXEEXT)
	@p='tsensorget005$(EXEEXT)'; \
	b='tsensorget005'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget010.log: tsensorget010$(EXEEXT)
	@p='tsensorget010$(EXEEXT)'; \
	b='tsensorget010'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget013.log: tsensorget013$(EXEEXT)
	@p='tsensorget013$(EXEEXT)'; \
	b='tsensorget013'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget016.log: tsensorget016$(EXEEXT)
	@p='tsensorget016$(EXEEXT)'; \
	b='tsensorget016'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget031.log: tsensorget031$(EXEEXT)
	@p='tsensorget031$(EXEEXT)'; \
	b='tsensorget031'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget033.log: tsensorget033$(EXEEXT)
	@p='tsensorget033$(EXEEXT)'; \
	b='tsensorget033'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget034.log: tsensorget034$(EXEEXT)
	@p='tsensorget034$(EXEEXT)'; \
	b='tsensorget034'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget035.log: tsensorget035$(EXEEXT)
	@p='tsensorget035$(EXEEXT)'; \
	b='tsensorget035'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget036.log: tsensorget036$(EXEEXT)
	@p='tsensorget036$(EXEEXT)'; \
	b='tsensorget036'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget040.log: tsensorget040$(EXEEXT)
	@p='tsensorget040$(EXEEXT)'; \
	b='tsensorget040'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorget041.log: tsensorget041$(EXEEXT)
	@p='tsensorget041$(EXEEXT)'; \
	b='tsensorget041'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcontrol001.log: tcontrol001$(EXEEXT)
	@p='tcontrol001$(EXEEXT)'; \
	b='tcontrol001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcontrol002.log: tcontrol002$(EXEEXT)
	@p='tcontrol002$(EXEEXT)'; \
	b='tcontrol002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcontrol003.log: tcontrol003$(EXEEXT)
	@p='tcontrol003$(EXEEXT)'; \
	b='tcontrol003'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tcontrolfailover.log: tcontrolfailover$(EXEEXT)
	@p='tcontrolfailover$(EXEEXT)'; \
	b='tcontrolfailover'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tdiscover001.log: tdiscover001$(EXEEXT)
	@p='tdiscover001$(EXEEXT)'; \
	b='tdiscover001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel001.log: tel001$(EXEEXT)
	@p='tel001$(EXEEXT)'; \
	b='tel001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel002.log: tel002$(EXEEXT)
	@p='tel002$(EXEEXT)'; \
	b='tel002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel003.log: tel003$(EXEEXT)
	@p='tel003$(EXEEXT)'; \
	b='tel003'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel004.log: tel004$(EXEEXT)
	@p='tel004$(EXEEXT)'; \
	b='tel004'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel005.log: tel005$(EXEEXT)
	@p='tel005$(EXEEXT)'; \
	b='tel005'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel006.log: tel006$(EXEEXT)
	@p='tel006$(EXEEXT)'; \
	b='tel006'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tel007.log: tel007$(EXEEXT)
	@p='tel007$(EXEEXT)'; \
	b='tel007'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thotswap001.log: thotswap001$(EXEEXT)
	@p='thotswap001$(EXEEXT)'; \
	b='thotswap001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thotswap-mhs001.log: thotswap-mhs001$(EXEEXT)
	@p='thotswap-mhs001$(EXEEXT)'; \
	b='thotswap-mhs001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
thotswap-simple001.log: thotswap-simple001$(EXEEXT)
	@p='thotswap-simple001$(EXEEXT)'; \
	b='thotswap-simple001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv001.log: tinv001$(EXEEXT)
	@p='tinv001$(EXEEXT)'; \
	b='tinv001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv002.log: tinv002$(EXEEXT)
	@p='tinv002$(EXEEXT)'; \
	b='tinv002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv003.log: tinv003$(EXEEXT)
	@p='tinv003$(EXEEXT)'; \
	b='tinv003'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv004.log: tinv004$(EXEEXT)
	@p='tinv004$(EXEEXT)'; \
	b='tinv004'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv005.log: tinv005$(EXEEXT)
	@p='tinv005$(EXEEXT)'; \
	b='tinv005'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv006.log: tinv006$(EXEEXT)
	@p='tinv006$(EXEEXT)'; \
	b='tinv006'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tinv007.log: tinv007$(EXEEXT)
	@p='tinv007$(EXEEXT)'; \
	b='tinv007'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tpower001.log: tpower001$(EXEEXT)
	@p='tpower001$(EXEEXT)'; \
	b='tpower001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
treset001.log: treset001$(EXEEXT)
	@p='treset001$(EXEEXT)'; \
	b='treset001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsptime001.log: tsptime001$(EXEEXT)
	@p='tsptime001$(EXEEXT)'; \
	b='tsptime001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsptime002.log: tsptime002$(EXEEXT)
	@p='tsptime002$(EXEEXT)'; \
	b='tsptime002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset001.log: tsensorset001$(EXEEXT)
	@p='tsensorset001$(EXEEXT)'; \
	b='tsensorset001'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset002.log: tsensorset002$(EXEEXT)
	@p='tsensorset002$(EXEEXT)'; \
	b='tsensorset002'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset003.log: tsensorset003$(EXEEXT)
	@p='tsensorset003$(EXEEXT)'; \
	b='tsensorset003'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset004.log: tsensorset004$(EXEEXT)
	@p='tsensorset004$(EXEEXT)'; \
	b='tsensorset004'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset005.log: tsensorset005$(EXEEXT)
	@p='tsensorset005$(EXEEXT)'; \
	b='tsensorset005'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset006.log: tsensorset006$(EXEEXT)
	@p='tsensorset006$(EXEEXT)'; \
	b='tsensorset006'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset007.log: tsensorset007$(EXEEXT)
	@p='tsensorset007$(EXEEXT)'; \
	b='tsensorset007'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset008.log: tsensorset008$(EXEEXT)
	@p='tsensorset008$(EXEEXT)'; \
	b='tsensorset008'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset009.log: tsensorset009$(EXEEXT)
	@p='tsensorset009$(EXEEXT)'; \
	b='tsensorset009'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset010.log: tsensorset010$(EXEEXT)
	@p='tsensorset010$(EXEEXT)'; \
	b='tsensorset010'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset011.log: tsensorset011$(EXEEXT)
	@p='tsensorset011$(EXEEXT)'; \
	b='tsensorset011'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset012.log: tsensorset012$(EXEEXT)
	@p='tsensorset012$(EXEEXT)'; \
	b='tsensorset012'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset013.log: tsensorset013$(EXEEXT)
	@p='tsensorset013$(EXEEXT)'; \
	b='tsensorset013'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset015.log: tsensorset015$(EXEEXT)
	@p='tsensorset015$(EXEEXT)'; \
	b='tsensorset015'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset017.log: tsensorset017$(EXEEXT)
	@p='tsensorset017$(EXEEXT)'; \
	b='tsensorset017'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset018.log: tsensorset018$(EXEEXT)
	@p='tsensorset018$(EXEEXT)'; \
	b='tsensorset018'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset019.log: tsensorset019$(EXEEXT)
	@p='tsensorset019$(EXEEXT)'; \
	b='tsensorset019'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset020.log: tsensorset020$(EXEEXT)
	@p='tsensorset020$(EXEEXT)'; \
	b='tsensorset020'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset021.log: tsensorset021$(EXEEXT)
	@p='tsensorset021$(EXEEXT)'; \
	b='tsensorset021'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset022.log: tsensorset022$(EXEEXT)
	@p='tsensorset022$(EXEEXT)'; \
	b='tsensorset022'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset023.log: tsensorset023$(EXEEXT)
	@p='tsensorset023$(EXEEXT)'; \
	b='tsensorset023'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
tsensorset024.log: tsensorset024$(EXEEXT)
	@p='tsensorset024$(EXEEXT)'; \
	b='tsensorset024'; \
	$(am__check_pre) $(LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_LOG_DRIVER_FLAGS) $(LOG_DRIVER_FLAGS) -- $(LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
.test.log:
	@p='$<'; \
	$(am__set_b); \
	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
	--log-file $$b.log --trs-file $$b.trs \
	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
	"$$tst" $(AM_TESTS_FD_REDIRECT)
@am__EXEEXT_TRUE@.test$(EXEEXT).log:
@am__EXEEXT_TRUE@	@p='$<'; \
@am__EXEEXT_TRUE@	$(am__set_b); \
@am__EXEEXT_TRUE@	$(am__check_pre) $(TEST_LOG_DRIVER) --test-name "$$f" \
@am__EXEEXT_TRUE@	--log-file $$b.log --trs-file $$b.trs \
@am__EXEEXT_TRUE@	$(am__common_driver_flags) $(AM_TEST_LOG_DRIVER_FLAGS) $(TEST_LOG_DRIVER_FLAGS) -- $(TEST_LOG_COMPILE) \
@am__EXEEXT_TRUE@	"$$tst" $(AM_TESTS_FD_REDIRECT)

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:
	-test -z "$(MOSTLYCLEANFILES)" || rm -f $(MOSTLYCLEANFILES)
	-test -z "$(TEST_LOGS)" || rm -f $(TEST_LOGS)
	-test -z "$(TEST_LOGS:.log=.trs)" || rm -f $(TEST_LOGS:.log=.trs)
	-test -z "$(TEST_SUITE_LOG)" || rm -f $(TEST_SUITE_LOG)

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(MAINTAINERCLEANFILES)" || rm -f $(MAINTAINERCLEANFILES)
clean: clean-am

clean-am: clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am check check-TESTS check-am clean \
	clean-checkPROGRAMS clean-generic clean-libtool \
	clean-noinstLTLIBRARIES cscopelist-am ctags ctags-am distclean \
	distclean-compile distclean-generic distclean-libtool \
	distclean-tags distdir dvi dvi-am html html-am info info-am \
	install install-am install-data install-data-am install-dvi \
	install-dvi-am install-exec install-exec-am install-html \
	install-html-am install-info install-info-am install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	maintainer-clean maintainer-clean-generic mostlyclean \
	mostlyclean-compile mostlyclean-generic mostlyclean-libtool \
	pdf pdf-am ps ps-am recheck tags tags-am uninstall \
	uninstall-am


$(REMOTE_SIM_SOURCES):
	if test ! -f $@ -a ! -L $@; then \
		$(LN_S) $(top_srcdir)/plugins/snmp_bc/$@; \
	fi
# libsnmp_bc_la_LDFLAGS = -version 0:0:0

libsnmp_bc.la: $(libsnmp_bc_la_OBJECTS) $(libsnmp_bc_la_DEPENDENCIES)
	$(LINK) -rpath $(pkglibdir) $(libsnmp_bc_la_LDFLAGS) $(libsnmp_bc_la_OBJECTS) $(libsnmp_bc_la_LIBADD) $(LIBS)

$(GENERATED_EVENT_CODE): $(EVENT_MAP_FILE) $(EVENT_MAP_SCRIPT) $(EVENT_XML_MAP_SCRIPT)
	$(EVENT_MAP_SCRIPT) -xml -idir $(top_srcdir)/plugins/snmp_bc -mapfile snmp_bc_event.map
	$(EVENT_XML_MAP_SCRIPT) -s eventxml $(GENERATED_EVENT_XML_MAP) > $(GENERATED_EVENT_CODE)

# Unit test using normal IF calls and simulation library
#tsnmp_bc_get_guid_SOURCES = tsnmp_bc_get_guid.c
#tsnmp_bc_get_guid_LDADD   = $(top_builddir)/utils/libopenhpiutils.la \
#		 $(top_builddir)/openhpid/libopenhpidaemon.la \
#		 $(top_builddir)/plugins/snmp_bc/t/libsnmp_bc.la

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
